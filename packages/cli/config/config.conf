{
  "graphlettes": [
    {
      "path": "/farm/graph",
      "storage": {
        "type": "mongo",
        "uri": ${?MONGO_URI},
        "collection": ${?PREFIX}"-"${?ENV}"-farm",
        "db": ${?PREFIX}"_"${?ENV},
        "options": {
          "directConnection": true
        }
      },
      "schema": "scalar Date\n\ntype Query {\n  getById(id: ID, at: Float): Farm\n}\n\ntype Farm {\n  name: String!\n  id: ID\n  coops: [Coop]\n}\n\ntype Coop {\n  name: String!\n  id: ID\n  hens: [Hen]\n}\n\ntype Hen {\n  name: String!\n  coop: Coop\n  eggs: Int\n  dob: Date\n  id: ID\n}",
      "rootConfig": {
        "singletons": [],
        "vectors": [],
        "resolvers": []
      }
    },
    {
      "path": "/coop/graph",
      "storage": {
        "type": "mongo",
        "uri": ${?MONGO_URI},
        "collection": ${?PREFIX}"-"${?ENV}"-coop",
        "db": ${?PREFIX}"_"${?ENV},
        "options": {
          "directConnection": true
        }
      },
      "schema": "scalar Date\n\ntype Farm {\n  name: String!\n  id: ID\n}\n\ntype Query {\n  getByName(name: String, at: Float): Coop\n  getById(id: ID, at: Float): Coop\n  getByFarm(id: ID, at: Float): [Coop]\n}\n\ntype Coop {\n  name: String!\n  farm: Farm!\n  id: ID\n  hens: [Hen]\n}\n\ntype Hen {\n  name: String!\n  eggs: Int\n  dob: Date\n  id: ID\n}",
      "rootConfig": {
        "singletons": [],
        "vectors": [],
        "resolvers": []
      }
    },
    {
      "path": "/hen/graph",
      "storage": {
        "type": "mongo",
        "uri": ${?MONGO_URI},
        "collection": ${?PREFIX}"-"${?ENV}"-hen",
        "db": ${?PREFIX}"_"${?ENV},
        "options": {
          "directConnection": true
        }
      },
      "schema": "scalar Date\n\ntype Farm {\n  name: String!\n  id: ID\n  coops: [Coop]\n}\n\ntype Coop {\n  name: String!\n  farm: Farm!\n  id: ID\n}\n\ntype Query {\n  getByName(name: String, at: Float): [Hen]\n  getById(id: ID, at: Float): Hen\n  getByCoop(id: ID, at: Float): [Hen]\n}\n\ntype Hen {\n  name: String!\n  coop: Coop\n  eggs: Int\n  dob: Date\n  id: ID\n}",
      "rootConfig": {
        "singletons": [],
        "vectors": [],
        "resolvers": []
      }
    }
  ],
  "port": 3033,
  "restlettes": [
    {
      "path": "/farm/api",
      "storage": {
        "type": "mongo",
        "uri": ${?MONGO_URI},
        "collection": ${?PREFIX}"-"${?ENV}"-farm",
        "db": ${?PREFIX}"_"${?ENV},
        "options": {
          "directConnection": true
        }
      },
      "schema": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    {
      "path": "/coop/api",
      "storage": {
        "type": "mongo",
        "uri": ${?MONGO_URI},
        "collection": ${?PREFIX}"-"${?ENV}"-coop",
        "db": ${?PREFIX}"_"${?ENV},
        "options": {
          "directConnection": true
        }
      },
      "schema": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "farm_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "faker": "location.country"
          },
          "farm_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "path": "/hen/api",
      "storage": {
        "type": "mongo",
        "uri": ${?MONGO_URI},
        "collection": ${?PREFIX}"-"${?ENV}"-hen",
        "db": ${?PREFIX}"_"${?ENV},
        "options": {
          "directConnection": true
        }
      },
      "schema": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "faker": "person.firstName"
          },
          "coop_id": {
            "type": "string",
            "format": "uuid"
          },
          "eggs": {
            "type": "integer",
            "minimum": 0,
            "maximum": 10
          },
          "dob": {
            "type": "string",
            "format": "date"
          }
        }
      }
    }
  ]
}