services:
  mongodb:
    image: mongo:8
    container_name: cdc-mongo
    command: ['--replSet=rs0', '--bind_ip_all']
    ports:
      - '27017:27017'
    healthcheck:
      test: ['CMD', 'mongosh', '--host', 'localhost:27017', '--quiet', '--eval', 'db.adminCommand("ping")']
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  mongo-init-replica:
    image: mongo:8
    container_name: cdc-mongo-init
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for MongoDB to be ready...' &&
        sleep 5 &&
        echo 'Initializing replica set...' &&
        mongosh --host mongodb:27017 --eval '
          try {
            rs.initiate({
              _id: \"rs0\",
              members: [{ _id: 0, host: \"mongodb:27017\" }]
            });
            print(\"Replica set initialized\");
          } catch(e) {
            if (e.message.includes(\"already initialized\")) {
              print(\"Replica set already initialized\");
            } else {
              throw e;
            }
          }
        ' &&
        sleep 5
      "
    restart: 'no'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: cdc-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: cdc-kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ['CMD', 'kafka-broker-api-versions', '--bootstrap-server', 'localhost:9092']
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 20s

  debezium:
    image: quay.io/debezium/server:2.6
    container_name: cdc-debezium
    depends_on:
      mongo-init-replica:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
    environment:
      - QUARKUS_LOG_LEVEL=INFO
    volumes:
      - ./debezium-config.properties:/debezium/conf/application.properties:ro
