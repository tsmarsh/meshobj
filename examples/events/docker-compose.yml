services:
  mongodb:
    image: mongo:8    # or 7 if you wiped data; 8 matches your existing FCV=8.0
    command: ["--replSet=rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=events_db
    healthcheck:
      test: ["CMD", "mongosh", "--host", "mongodb:27017", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  mongo-init-replica:
    image: mongo:8
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for MongoDB to be ready...' &&
        sleep 5 &&
        echo 'Checking if replica set is already initialized...' &&
        if mongosh --host mongodb:27017 --eval 'rs.status()' --quiet 2>&1 | grep -q 'no replset config has been received'; then
          echo 'Initializing replica set...' &&
          mongosh --host mongodb:27017 --eval '
            rs.initiate({
              _id: \"rs0\",
              members: [
                { _id: 0, host: \"mongodb:27017\" }
              ]
            })
          ' &&
          echo 'Waiting for PRIMARY status...' &&
          for i in {1..30}; do
            if mongosh --host mongodb:27017 --eval 'rs.status().myState' --quiet 2>&1 | grep -q '1'; then
              echo 'Replica set initialized successfully'
              exit 0
            fi
            sleep 1
          done
          echo 'Timeout waiting for PRIMARY'
          exit 1
        else
          echo 'Replica set already initialized'
        fi
      "
    restart: "no"

  redpanda:
    image: redpandadata/redpanda:v23.3.14
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp=1
      - --reserve-memory=0M
      - --check=false
      - --node-id=0
      - --kafka-addr=0.0.0.0:9092
      - --advertise-kafka-addr=redpanda:9092
      - --pandaproxy-addr=0.0.0.0:8082
      - --advertise-pandaproxy-addr=redpanda:8082
    ports:
      - "9092:9092"
      - "9644:9644"
      - "8082:8082"
    healthcheck:
      test: ["CMD", "bash", "-lc", "curl -s localhost:9644/v1/status/ready | grep -q 'ready'"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  debezium:
    image: quay.io/debezium/server:2.6
    depends_on:
      mongo-init-replica:
        condition: service_completed_successfully
      redpanda:
        condition: service_healthy
    environment:
      - QUARKUS_LOG_LEVEL=INFO
    volumes:
      - ./debezium/application.properties:/debezium/conf/application.properties:ro

  events:
    build:
      context: ../..
      dockerfile: examples/events/Dockerfile
    ports:
      - "4055:4055"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/events_db?replicaSet=rs0
      - PORT=4055
      - ENV=development
      - PREFIX=events
      - PLATFORM_URL=http://localhost:4055
      - KAFKA_BROKER=localhost:9092   # host-based access for tests
    depends_on:
      mongo-init-replica:
        condition: service_completed_successfully
      redpanda:
        condition: service_healthy
      debezium:
        condition: service_started