<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CDC Pipeline End-to-End Test" enabled="true">
      <stringProp name="TestPlan.comments">Proves CDC pipeline works: POST events and consume from both Kafka topics</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <!-- Kafka Consumer Config for Raw Events -->
      <com.di.jmeter.kafka.config.KafkaConsumerConfig guiclass="com.di.jmeter.kafka.config.KafkaConsumerConfigUI" testclass="com.di.jmeter.kafka.config.KafkaConsumerConfig" testname="Raw Events Consumer Config" enabled="true">
        <stringProp name="kafkaConsumerClientVariableName">rawConsumer</stringProp>
        <stringProp name="kafkaBrokers">localhost:9092</stringProp>
        <stringProp name="groupId">jmeter-raw-${__time()}</stringProp>
        <stringProp name="topic">events.events_development.event</stringProp>
        <stringProp name="deSerializerKey">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="deSerializerValue">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="numberOfMsgToPoll">10</stringProp>
        <boolProp name="autoCommit">true</boolProp>
        <stringProp name="securityType">PLAINTEXT</stringProp>
      </com.di.jmeter.kafka.config.KafkaConsumerConfig>
      <hashTree/>

      <!-- Kafka Consumer Config for Processed Events -->
      <com.di.jmeter.kafka.config.KafkaConsumerConfig guiclass="com.di.jmeter.kafka.config.KafkaConsumerConfigUI" testclass="com.di.jmeter.kafka.config.KafkaConsumerConfig" testname="Processed Events Consumer Config" enabled="true">
        <stringProp name="kafkaConsumerClientVariableName">processedConsumer</stringProp>
        <stringProp name="kafkaBrokers">localhost:9092</stringProp>
        <stringProp name="groupId">jmeter-processed-${__time()}</stringProp>
        <stringProp name="topic">events.events_development.processedevent</stringProp>
        <stringProp name="deSerializerKey">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="deSerializerValue">org.apache.kafka.common.serialization.StringDeserializer</stringProp>
        <stringProp name="numberOfMsgToPoll">10</stringProp>
        <boolProp name="autoCommit">true</boolProp>
        <stringProp name="securityType">PLAINTEXT</stringProp>
      </com.di.jmeter.kafka.config.KafkaConsumerConfig>
      <hashTree/>

      <!-- Thread Group: POST events -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Event Producers" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">20</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">3</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
  "name": "cdc_e2e_test_${__threadNum}_${__counter(TRUE,)}",
  "data": "{\"test\":true,\"thread\":${__threadNum},\"timestamp\":${__time()}}",
  "timestamp": "${__time(yyyy-MM-dd'T'HH:mm:ss'Z',)}",
  "source": "jmeter_cdc_e2e",
  "version": "1.0"
}</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">4055</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/event/api</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Headers">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>

          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert 200 OK">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>

        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Delay 200ms">
          <stringProp name="ConstantTimer.delay">200</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>

      <!-- Thread Group: Monitor Kafka Topics -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Kafka Monitors" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">15</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <stringProp name="ThreadGroup.delayedStart">true</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <!-- Monitor Raw Events -->
        <com.di.jmeter.kafka.sampler.KafkaConsumerSampler guiclass="com.di.jmeter.kafka.sampler.KafkaConsumerSamplerUI" testclass="com.di.jmeter.kafka.sampler.KafkaConsumerSampler" testname="Poll Raw Events Topic" enabled="true">
          <stringProp name="kafkaConsumerClientVariableName">rawConsumer</stringProp>
          <stringProp name="pollTimeout">2000</stringProp>
        </com.di.jmeter.kafka.sampler.KafkaConsumerSampler>
        <hashTree/>

        <!-- Monitor Processed Events -->
        <com.di.jmeter.kafka.sampler.KafkaConsumerSampler guiclass="com.di.jmeter.kafka.sampler.KafkaConsumerSamplerUI" testclass="com.di.jmeter.kafka.sampler.KafkaConsumerSampler" testname="Poll Processed Events Topic" enabled="true">
          <stringProp name="kafkaConsumerClientVariableName">processedConsumer</stringProp>
          <stringProp name="pollTimeout">2000</stringProp>
        </com.di.jmeter.kafka.sampler.KafkaConsumerSampler>
        <hashTree/>

        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Poll Every 2s">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>

      <!-- Results -->
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>

      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
