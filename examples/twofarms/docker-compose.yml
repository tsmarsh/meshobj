services:
  mongodb:
    image: mongo:latest
    # Port not exposed to host - only accessible via Docker network to avoid conflicts
    environment:
      - MONGO_INITDB_DATABASE=two_farm_db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  farm:
    build:
      context: ../..
      dockerfile: examples/farm/Dockerfile
    ports:
      - "5055:5055"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/two_farm_db
      - PORT=5055
      - EQUIP_PORT=6066
      - ENV=development
      - PREFIX=farm
      - PLATFORM_URL=http://farm:5055
    volumes:
      - ./farm:/app/config
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5055/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  equipment:
    build:
      context: ../..
      dockerfile: examples/farm/Dockerfile
    ports:
      - "6066:6066"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/two_farm_db
      - PORT=6066
      - FARM_PORT=5055
      - ENV=development
      - PREFIX=equipment
      - PLATFORM_URL=http://equipment:6066
    volumes:
      - ./equipment:/app/config
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6066/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
